name: Build, Test and Deploy Zomato Clone

on:
  push:
    branches:
      - master

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # 📦 Checkout code
    - name: Checkout Code
      uses: actions/checkout@v4

    # 🧪 Backend: install & test
    - name: Install backend dependencies
      working-directory: ./server
      run: npm install

    - name: Run backend tests
      working-directory: ./server
      run: npm test || echo "⚠️ Backend tests failed"

    # 🌐 Frontend: install & build
    - name: Install frontend dependencies
      working-directory: ./client
      run: npm install

    - name: Build frontend
      working-directory: ./client
      run: npm run build

    # 🔍 Confirm frontend build exists
    - name: Confirm frontend build output
      run: ls -la ./client/dist

    # 🧹 Clean /var/www/html (no sudo)
    - name: Clean /var/www/html on GCP VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        script: |
          echo "🧹 Removing old frontend files..."
          rm -rf /var/www/html/*

    # 📤 Upload backend to GCP VM
    - name: Upload backend folder to GCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        source: "server"
        target: "/home/${{ secrets.GCP_VM_USER }}/zomato-clone"

    # 📤 Upload frontend to NGINX path
    - name: Upload frontend to NGINX path
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        source: "client/dist"
        target: "/var/www/html"
        strip_components: 2

    # 🚀 Start backend with PM2
    - name: Start backend with PM2 on GCP
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        script: |
          echo "📦 Installing backend dependencies..."
          cd ~/zomato-clone/server
          npm install

          echo "🔁 Restarting backend using PM2..."
          pm2 delete backend || true
          pm2 start index.js --name backend

          echo "✅ Backend is now running!"
